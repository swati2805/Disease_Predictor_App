{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn import preprocessing\n",
    "import matplotlib.pyplot as plt \n",
    "plt.rc(\"font\", size=14)\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "import seaborn as sns\n",
    "sns.set(style=\"white\")\n",
    "sns.set(style=\"whitegrid\", color_codes=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(919, 14)\n",
      "['63', '1', '1.1', '145', '233', '1.2', '2', '150', '0', '2.3', '3', '0.1', '6', '0.2']\n"
     ]
    }
   ],
   "source": [
    "data = pd.read_csv('/Users/swatishukla/Downloads/Smart-EHR-master/heart.csv', header=0)\n",
    "data = data.dropna()\n",
    "print(data.shape)\n",
    "print(list(data.columns))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>63</th>\n",
       "      <th>1</th>\n",
       "      <th>1.1</th>\n",
       "      <th>145</th>\n",
       "      <th>233</th>\n",
       "      <th>1.2</th>\n",
       "      <th>2</th>\n",
       "      <th>150</th>\n",
       "      <th>0</th>\n",
       "      <th>2.3</th>\n",
       "      <th>3</th>\n",
       "      <th>0.1</th>\n",
       "      <th>6</th>\n",
       "      <th>0.2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>160</td>\n",
       "      <td>286</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>108</td>\n",
       "      <td>1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>67</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>120</td>\n",
       "      <td>229</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>129</td>\n",
       "      <td>1</td>\n",
       "      <td>2.6</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>130</td>\n",
       "      <td>250</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>41</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>130</td>\n",
       "      <td>204</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>172</td>\n",
       "      <td>0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>56</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>236</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>178</td>\n",
       "      <td>0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   63  1  1.1  145  233 1.2  2  150  0  2.3  3 0.1  6  0.2\n",
       "0  67  1    4  160  286   0  2  108  1  1.5  2   3  3    2\n",
       "1  67  1    4  120  229   0  2  129  1  2.6  2   2  7    1\n",
       "2  37  1    3  130  250   0  0  187  0  3.5  3   0  3    0\n",
       "3  41  0    2  130  204   0  2  172  0  1.4  1   0  3    0\n",
       "4  56  1    2  120  236   0  0  178  0  0.8  1   0  3    0"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Attributes of Heart dataset \n",
    "S.No\t    Name\tDescription\n",
    "1.\tCp\tChest pain type \n",
    "2.\tTrestbps \tResting blood pressure (in mm Hg on admission to the hospital)\n",
    "3.\tChol \t Serum cholestoral in mg/dl \n",
    "4.\tFbs\tFasting blood sugar\n",
    "5.\tRestecg\tResting electrocardiographic results \n",
    "6.\tThalach \tMaximum heart rate achieved\n",
    "7.\t Exang\tExercise induced angina\n",
    "8.\tOp\tObservered pressure\n",
    "8.\tSlope\tThe slope of the peak exercise ST segment \n",
    "9.\tCa \tNumber of major vessels (0-3) colored by flourosopy \n",
    "10.\tThal \tDefect in Thal level\n",
    "11.\tHeart\tIs there a heart disease or no"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    725\n",
       "0    194\n",
       "Name: 1, dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['1'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    410\n",
       "1    265\n",
       "2    109\n",
       "3    107\n",
       "4     28\n",
       "Name: 0.2, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['0.2'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='1',data=data, palette='hls')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='0.2',data=data, palette='hls')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "percentage of no heart disease is 60.74074074074074\n",
      "percentage of yes heart disease 39.25925925925926\n"
     ]
    }
   ],
   "source": [
    "count_no_heart_dis = len(data[data['0.2']==0])\n",
    "count_yes_heart_dis = len(data[data['0.2']==1])\n",
    "pct_of_no_heart_dis = count_no_heart_dis/(count_no_heart_dis+count_yes_heart_dis)\n",
    "print(\"percentage of no heart disease is\", pct_of_no_heart_dis*100)\n",
    "pct_of_heart_dis = count_yes_heart_dis/(count_no_heart_dis+count_yes_heart_dis)\n",
    "print(\"percentage of yes heart disease\", pct_of_heart_dis*100)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our classes are imbalanced, and the ratio of no-heart_disease to yes_heart_disease instances is 60:40."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>63</th>\n",
       "      <th>1</th>\n",
       "      <th>1.1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.2</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>50.517073</td>\n",
       "      <td>0.648780</td>\n",
       "      <td>2.765854</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53.528302</td>\n",
       "      <td>0.886792</td>\n",
       "      <td>3.581132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>57.577982</td>\n",
       "      <td>0.908257</td>\n",
       "      <td>3.724771</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>59.214953</td>\n",
       "      <td>0.925234</td>\n",
       "      <td>3.691589</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>59.214286</td>\n",
       "      <td>0.928571</td>\n",
       "      <td>3.750000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            63         1       1.1\n",
       "0.2                               \n",
       "0    50.517073  0.648780  2.765854\n",
       "1    53.528302  0.886792  3.581132\n",
       "2    57.577982  0.908257  3.724771\n",
       "3    59.214953  0.925234  3.691589\n",
       "4    59.214286  0.928571  3.750000"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.groupby('0.2').mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Average is around 50 to 60"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>63</th>\n",
       "      <th>1.1</th>\n",
       "      <th>0.2</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>52.474227</td>\n",
       "      <td>2.943299</td>\n",
       "      <td>0.422680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53.775172</td>\n",
       "      <td>3.335172</td>\n",
       "      <td>1.150345</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          63       1.1       0.2\n",
       "1                               \n",
       "0  52.474227  2.943299  0.422680\n",
       "1  53.775172  3.335172  1.150345"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.groupby('1').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>63</th>\n",
       "      <th>1</th>\n",
       "      <th>1.1</th>\n",
       "      <th>0.2</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.2</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>52.507225</td>\n",
       "      <td>0.763006</td>\n",
       "      <td>3.196532</td>\n",
       "      <td>0.868497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>58.408759</td>\n",
       "      <td>0.861314</td>\n",
       "      <td>3.313869</td>\n",
       "      <td>1.357664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>?</th>\n",
       "      <td>53.666667</td>\n",
       "      <td>0.877778</td>\n",
       "      <td>3.588889</td>\n",
       "      <td>1.433333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            63         1       1.1       0.2\n",
       "1.2                                         \n",
       "0    52.507225  0.763006  3.196532  0.868497\n",
       "1    58.408759  0.861314  3.313869  1.357664\n",
       "?    53.666667  0.877778  3.588889  1.433333"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.groupby('1.2').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>63</th>\n",
       "      <th>1</th>\n",
       "      <th>1.1</th>\n",
       "      <th>0.2</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>56.238372</td>\n",
       "      <td>0.936047</td>\n",
       "      <td>3.633721</td>\n",
       "      <td>1.697674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>54.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>57.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>50.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>57.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>28.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>139</th>\n",
       "      <td>62.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>44.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>49.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>40.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>62.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>34.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>41.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>44.400000</td>\n",
       "      <td>0.600000</td>\n",
       "      <td>2.600000</td>\n",
       "      <td>0.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>34.500000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>47.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>63.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>51.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.666667</td>\n",
       "      <td>1.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>37.500000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>53.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>44.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>62.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>57.333333</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>41.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>47.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>70.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>46.250000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.250000</td>\n",
       "      <td>0.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>347</th>\n",
       "      <td>57.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>349</th>\n",
       "      <td>50.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>353</th>\n",
       "      <td>55.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>354</th>\n",
       "      <td>57.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>355</th>\n",
       "      <td>48.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>358</th>\n",
       "      <td>42.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>360</th>\n",
       "      <td>65.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365</th>\n",
       "      <td>54.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>369</th>\n",
       "      <td>67.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>384</th>\n",
       "      <td>67.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>385</th>\n",
       "      <td>58.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>388</th>\n",
       "      <td>56.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>392</th>\n",
       "      <td>40.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>393</th>\n",
       "      <td>58.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>394</th>\n",
       "      <td>58.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>404</th>\n",
       "      <td>52.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>407</th>\n",
       "      <td>63.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>409</th>\n",
       "      <td>56.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>412</th>\n",
       "      <td>44.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>417</th>\n",
       "      <td>65.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>458</th>\n",
       "      <td>58.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>466</th>\n",
       "      <td>40.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>468</th>\n",
       "      <td>53.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>44.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>518</th>\n",
       "      <td>53.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>529</th>\n",
       "      <td>32.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>564</th>\n",
       "      <td>67.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>603</th>\n",
       "      <td>54.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>56.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>?</th>\n",
       "      <td>51.433333</td>\n",
       "      <td>0.766667</td>\n",
       "      <td>3.066667</td>\n",
       "      <td>0.600000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>218 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            63         1       1.1       0.2\n",
       "233                                         \n",
       "0    56.238372  0.936047  3.633721  1.697674\n",
       "100  54.000000  1.000000  3.000000  0.500000\n",
       "117  38.000000  1.000000  4.000000  1.000000\n",
       "126  57.000000  1.000000  3.000000  0.000000\n",
       "129  50.000000  1.000000  4.000000  0.000000\n",
       "131  57.000000  1.000000  4.000000  3.000000\n",
       "132  28.000000  1.000000  2.000000  0.000000\n",
       "139  62.000000  1.000000  1.000000  0.000000\n",
       "141  44.000000  0.000000  3.000000  0.000000\n",
       "142  49.000000  1.000000  3.000000  3.000000\n",
       "147  40.500000  1.000000  3.000000  0.000000\n",
       "149  60.000000  0.500000  3.500000  0.500000\n",
       "153  62.000000  1.000000  4.000000  2.000000\n",
       "156  34.000000  1.000000  1.000000  1.000000\n",
       "157  41.000000  1.000000  2.000000  0.000000\n",
       "160  44.400000  0.600000  2.600000  0.200000\n",
       "161  34.500000  0.500000  2.500000  0.000000\n",
       "163  47.000000  0.500000  3.500000  0.000000\n",
       "164  60.000000  0.500000  3.000000  2.000000\n",
       "165  63.000000  1.000000  2.000000  0.000000\n",
       "166  51.000000  1.000000  2.666667  1.333333\n",
       "167  37.500000  0.500000  4.000000  1.500000\n",
       "168  53.500000  1.000000  2.500000  0.000000\n",
       "169  44.000000  1.000000  4.000000  2.000000\n",
       "170  62.000000  1.000000  4.000000  2.500000\n",
       "171  57.333333  1.000000  3.000000  1.000000\n",
       "172  41.000000  1.000000  4.000000  1.000000\n",
       "173  47.000000  0.500000  4.000000  1.500000\n",
       "174  70.000000  1.000000  4.000000  4.000000\n",
       "175  46.250000  1.000000  3.250000  0.250000\n",
       "..         ...       ...       ...       ...\n",
       "347  57.000000  0.000000  4.000000  0.000000\n",
       "349  50.000000  1.000000  4.000000  1.000000\n",
       "353  55.000000  1.000000  4.000000  3.000000\n",
       "354  57.000000  0.000000  4.000000  0.000000\n",
       "355  48.000000  1.000000  4.000000  1.000000\n",
       "358  42.000000  1.000000  4.000000  0.000000\n",
       "360  65.000000  0.000000  3.000000  0.000000\n",
       "365  54.000000  1.000000  4.000000  0.000000\n",
       "369  67.000000  1.000000  4.000000  3.000000\n",
       "384  67.000000  1.000000  4.000000  2.000000\n",
       "385  58.000000  1.000000  4.000000  0.000000\n",
       "388  56.000000  1.000000  4.000000  1.000000\n",
       "392  40.000000  0.000000  4.000000  1.000000\n",
       "393  58.000000  0.000000  2.000000  1.000000\n",
       "394  58.500000  0.000000  3.000000  0.000000\n",
       "404  52.000000  1.000000  4.000000  1.000000\n",
       "407  63.000000  0.000000  4.000000  4.000000\n",
       "409  56.000000  0.000000  4.000000  2.000000\n",
       "412  44.000000  1.000000  4.000000  0.000000\n",
       "417  65.000000  0.000000  3.000000  0.000000\n",
       "458  58.000000  1.000000  4.000000  0.000000\n",
       "466  40.000000  1.000000  4.000000  1.000000\n",
       "468  53.000000  0.000000  2.000000  0.000000\n",
       "491  44.000000  1.000000  4.000000  1.000000\n",
       "518  53.000000  1.000000  3.000000  1.000000\n",
       "529  32.000000  1.000000  4.000000  1.000000\n",
       "564  67.000000  0.000000  3.000000  0.000000\n",
       "603  54.000000  1.000000  4.000000  1.000000\n",
       "85   56.000000  1.000000  4.000000  0.000000\n",
       "?    51.433333  0.766667  3.066667  0.600000\n",
       "\n",
       "[218 rows x 4 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.groupby('233').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-25-827f4af554f5>, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-25-827f4af554f5>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    pd.crosstab(data.0.2, data.233.plot(kind='bar')\u001b[0m\n\u001b[0m                     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "pd.crosstab(data.0.2, data.233.plot(kind='bar')\n",
    "plt.title('Prediction if the patient has heart disease or not vs fasting blood sugar')\n",
    "plt.xlabel('0.2')\n",
    "plt.ylabel('233')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
